datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-py" // This specifies the Python client
}

model Job {
  id           Int           @id @default(autoincrement())
  title        String
  description  String?
  questions    Question[] // One-to-many relation with Question
  applications Application[] // One-to-many relation with Application
  recruiterId  Int?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Question {
  id             Int             @id @default(autoincrement())
  text           String
  job            Job             @relation(fields: [jobId], references: [id])
  jobId          Int
  isIdQuestion   Boolean?        @default(false)
  candidateId    Int? // Relationship with candidate since each question is unique for every candidate
  videoResponses VideoResponse[] // One-to-many relation with VideoResponse
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Application {
  id             Int               @id @default(autoincrement())
  status         ApplicationStatus
  candidate      Candidate         @relation(fields: [candidateId], references: [id])
  candidateId    Int
  job            Job               @relation(fields: [jobId], references: [id])
  jobId          Int
  videoResponses VideoResponse[] // One-to-many relation with VideoResponse
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
}

model Candidate {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  resume       String? // URL or file path
  recruiterId  Int?
  applications Application[] // One-to-many relation with Application
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model VideoResponse {
  id            Int         @id @default(autoincrement())
  videoUrl      String // URL to the video
  transcript    String? // AI-generated transcript
  summary       String? // AI-generated summary
  feedback      String? // AI-generated feedback
  rating        String? // AI-generated rating
  recruiterId   Int?
  application   Application @relation(fields: [applicationId], references: [id])
  applicationId Int
  question      Question    @relation(fields: [questionId], references: [id])
  questionId    Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

enum ApplicationStatus {
  RECIEVED
  SHORTLISTED
  REJECTED
  ACCEPTED
}
